@model LMS.Models.RegisterViewModel
@using LMS.Models;
<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/HideShowGroup.js")" type="text/javascript"></script>

@{
    ViewBag.Title = "Registrera användare";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Skapa konto</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div>
        @if (ViewBag.Error != null)
        {
            <h5 style="color: red">@Html.ViewBag.Error</h5>
        }
    </div>
    
   
    
    if (Request.UrlReferrer.LocalPath == (string)TempData["ReturnPath"])
    {
        @Html.Hidden("GroupId", TempData["GroupId"])
    
        <div class="form-group">
            <div class="control-label col-md-2 text-value-label">@Html.DisplayNameFor(model => model.Role)</div>
            <div class="col-md-10">
                <div class="text-value">@Html.DisplayFor(model => model.Role)</div>
            </div>
        </div>

    <div class="form-group">
        <div class="control-label col-md-2 text-value-label">@Html.DisplayNameFor(model => model.Group)</div>
        <div class="col-md-10">
            <div class="text-value">@TempData["GroupName"]</div>
        </div>
    </div>

    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Role, "Roll", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Role", EnumHelper.GetSelectList(typeof(Role)), htmlAttributes: new { @class = "form-control", @id="role" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

    <div class="form-group lms-hidden">
        @Html.LabelFor(model => model.Group, "Grupp", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("GroupId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
        </div>
    </div>
    
        TempData["NoGroup"] = "teacher";
    }
    @*<div class="form-group">
        @Html.LabelFor(model => model.Group, "Grupp", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("GroupId", EnumHelper.GetSelectList(typeof(Group)), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Registrera" />
        </div>
    </div>
}

<p>
    @if (Request.UrlReferrer.LocalPath == "/Account/UserList")
    {
        @Html.ActionLink("Tillbaka", "UserList", "Account")
    }

    else if (Request.UrlReferrer.LocalPath == "/Groups/Details/" + TempData["ParentId"])
    {
        @Html.ActionLink("Tillbaka", "Details", "Groups", new { id = Model.GroupId }, null)
    }
</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

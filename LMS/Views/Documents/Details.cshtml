@model LMS.Models.Document

@{
    ViewBag.Title = "Detaljer";
}

<h2>Detaljer</h2>

<div>
    <h4>Dokument</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.ActionLink(Model.Name, "Download", "Documents",
                                new RouteValueDictionary(new { type = "Document", id = Model.Id }),
                                new Dictionary<string, object> { { "title", "Ladda ned fil" } })
        </dd>
    </dl>
    <dl class="dl-horizontal">
        <dt>
            Dokumentägare
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ApplicationUser.UserName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TimeStamp)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TimeStamp)
        </dd>

        @if (Model.Activity != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Activity)
            </dt>

            <dd>
                @Html.ActionLink(Model.Activity.Name, "Details", "Activities",
                            new RouteValueDictionary(new { id = Model.ActivityId }),
                            new Dictionary<string, object> { { "title", "Gå till aktivitet" } })
            </dd>
        }
        else if (Model.Course != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Course)
            </dt>

            <dd>
                @Html.ActionLink(Model.Course.Name, "Details", "Courses",
                            new RouteValueDictionary(new { id = Model.CourseId }),
                            new Dictionary<string, object> { { "title", "Gå till kurs" } })
            </dd>
        }
        else if (Model.Group != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Group)
            </dt>

            <dd>
                @Html.ActionLink(Model.Group.Name, "Details", "Groups",
                            new RouteValueDictionary(new { id = Model.GroupId }),
                            new Dictionary<string, object> { { "title", "Gå till grupp" } })
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @if (Model.Description != null)
            {
                @Html.DisplayFor(model => model.Description)
            }
            else
            {
                <span>Ingen beskrivning</span>
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Feedback)
        </dt>

        <dd>
            @if (Model.Feedback != null)
            {
                if (TempData.Peek("CanViewFeedback") != null)
                {
                    @Html.DisplayFor(model => model.Feedback)
                }
                else
                {
                    <span>Finns</span>
                }
            }
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Redigera", "Edit", new { type = "Document", id = Model.Id }) |
    @{
        // Information about usage of TempData.
        // http://computerauthor.blogspot.se/2014/09/mvc-tempdata-peek-and-keep-confusion_14.html
        if (TempData.Peek("ReturnPath") != null)
        {
            @Html.Hyperlink((string)TempData["ReturnPath"], "Tillbaka");
                                                                       TempData.Keep("ReturnPath");
        }
        else
        {
            @Html.Hyperlink(Request.UrlReferrer.ToString(), "Tillbaka");
        }
    }
</div>
